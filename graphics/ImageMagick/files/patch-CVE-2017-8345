From fd6144f89f33f3065b0a8436f9af81ab9561459f Mon Sep 17 00:00:00 2001
From: Dirk Lemstra <dirk@git.imagemagick.org>
Date: Thu, 27 Apr 2017 11:59:39 +0200
Subject: [PATCH] Refactored ReadMNGImage to fix memory leak reported in #442

---

+ MngInfoFreeStruct() changes

 coders/png.c | 105 +++++++++++++++++++++++++++++++++++------------------------
 1 file changed, 62 insertions(+), 43 deletions(-)

--- coders/png.c.orig	2016-11-08 13:30:03.000000000 +0100
+++ coders/png.c	2017-05-29 14:41:39.998247000 +0200
@@ -1527,14 +1527,14 @@ static void MngInfoDiscardObject(MngInfo *mng_info,int
     }
 }
 
-static void MngInfoFreeStruct(MngInfo *mng_info,
-    MagickBooleanType *have_mng_structure)
+static MngInfo *MngInfoFreeStruct(MngInfo *mng_info)
 {
-  if (*have_mng_structure != MagickFalse && (mng_info != (MngInfo *) NULL))
-    {
       register ssize_t
         i;
 
+      if (mng_info == (MngInfo *) NULL)
+        return((MngInfo *) NULL);
+
       for (i=1; i < MNG_MAX_OBJECTS; i++)
         MngInfoDiscardObject(mng_info,i);
 
@@ -1542,9 +1542,7 @@ static void MngInfoFreeStruct(MngInfo *mng_info,
         mng_info->global_plte=(png_colorp)
           RelinquishMagickMemory(mng_info->global_plte);
 
-      mng_info=(MngInfo *) RelinquishMagickMemory(mng_info);
-      *have_mng_structure=MagickFalse;
-    }
+      return ((MngInfo *) RelinquishMagickMemory(mng_info));
 }
 
 static MngBox mng_minimum_box(MngBox box1,MngBox box2)
@@ -3949,7 +3947,7 @@ static Image *ReadPNGImage(const ImageInfo *image_info
   have_mng_structure=MagickTrue;
 
   image=ReadOnePNGImage(mng_info,image_info,exception);
-  MngInfoFreeStruct(mng_info,&have_mng_structure);
+  mng_info=MngInfoFreeStruct(mng_info);
 
   if (image == (Image *) NULL)
     {
@@ -4808,7 +4806,7 @@ static Image *ReadJNGImage(const ImageInfo *image_info
 
   mng_info->image=image;
   image=ReadOneJNGImage(mng_info,image_info,exception);
-  MngInfoFreeStruct(mng_info,&have_mng_structure);
+  mng_info=MngInfoFreeStruct(mng_info);
 
   if (image == (Image *) NULL)
     {
@@ -4836,7 +4834,8 @@ static Image *ReadJNGImage(const ImageInfo *image_info
 }
 #endif
 
-static Image *ReadMNGImage(const ImageInfo *image_info,ExceptionInfo *exception)
+static Image *ReadOneMNGImage(MngInfo* mng_info, const ImageInfo *image_info,
+     ExceptionInfo *exception)
 {
   char
     page_geometry[MaxTextExtent];
@@ -4845,8 +4844,7 @@ static Image *ReadMNGImage(const ImageInfo *image_info
     *image;
 
   MagickBooleanType
-    logging,
-    have_mng_structure;
+    logging;
 
   volatile int
     first_mng_object,
@@ -4863,9 +4861,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
   MagickOffsetType
     offset;
 
-  MngInfo
-    *mng_info;
-
   MngBox
     default_fb,
     fb,
@@ -4936,38 +4931,12 @@ static Image *ReadMNGImage(const ImageInfo *image_info
   default_fb.left=0;
   default_fb.right=0;
 
-  /* Open image file.  */
+  logging=LogMagickEvent(CoderEvent,GetMagickModule(),
+    "  Enter ReadOneMNGImage()");
 
-  assert(image_info != (const ImageInfo *) NULL);
-  assert(image_info->signature == MagickSignature);
-  (void) LogMagickEvent(TraceEvent,GetMagickModule(),"%s",image_info->filename);
-  assert(exception != (ExceptionInfo *) NULL);
-  assert(exception->signature == MagickSignature);
-  logging=LogMagickEvent(CoderEvent,GetMagickModule(),"Enter ReadMNGImage()");
-  image=AcquireImage(image_info);
-  mng_info=(MngInfo *) NULL;
-  status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);
+  image=mng_info->image;
+//  have_mng_structure=MagickTrue;
 
-  if (status == MagickFalse)
-    return((Image *) NULL);
-
-  first_mng_object=MagickFalse;
-  skipping_loop=(-1);
-  have_mng_structure=MagickFalse;
-
-  /* Allocate a MngInfo structure.  */
-
-  mng_info=(MngInfo *) AcquireMagickMemory(sizeof(MngInfo));
-
-  if (mng_info == (MngInfo *) NULL)
-    ThrowReaderException(ResourceLimitError,"MemoryAllocationFailed");
-
-  /* Initialize members of the MngInfo structure.  */
-
-  (void) ResetMagickMemory(mng_info,0,sizeof(MngInfo));
-  mng_info->image=image;
-  have_mng_structure=MagickTrue;
-
   if (LocaleCompare(image_info->magick,"MNG") == 0)
     {
       char
@@ -4987,6 +4956,7 @@ static Image *ReadMNGImage(const ImageInfo *image_info
       mng_info->exists[0]=MagickTrue;
     }
 
+  skipping_loop=(-1);
   first_mng_object=MagickTrue;
   mng_type=0;
 #if defined(MNG_INSERT_LAYERS)
@@ -5607,7 +5577,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
                     if (GetNextImageInList(image) == (Image *) NULL)
                       {
                         image=DestroyImageList(image);
-                        MngInfoFreeStruct(mng_info,&have_mng_structure);
                         return((Image *) NULL);
                       }
 
@@ -6182,7 +6151,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
                     if (GetNextImageInList(image) == (Image *) NULL)
                       {
                         image=DestroyImageList(image);
-                        MngInfoFreeStruct(mng_info,&have_mng_structure);
                         return((Image *) NULL);
                       }
 
@@ -6235,7 +6203,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
               if (GetNextImageInList(image) == (Image *) NULL)
                 {
                   image=DestroyImageList(image);
-                  MngInfoFreeStruct(mng_info,&have_mng_structure);
                   return((Image *) NULL);
                 }
 
@@ -6284,7 +6251,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
             if (GetNextImageInList(image) == (Image *) NULL)
               {
                 image=DestroyImageList(image);
-                MngInfoFreeStruct(mng_info,&have_mng_structure);
                 return((Image *) NULL);
               }
 
@@ -6354,7 +6320,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
           (void) LogMagickEvent(CoderEvent,GetMagickModule(),
             "exit ReadJNGImage() with error");
 
-        MngInfoFreeStruct(mng_info,&have_mng_structure);
         return((Image *) NULL);
       }
 
@@ -6362,7 +6327,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
       {
         (void) CloseBlob(image);
         image=DestroyImageList(image);
-        MngInfoFreeStruct(mng_info,&have_mng_structure);
         return((Image *) NULL);
       }
 
@@ -6476,7 +6440,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
                 if (GetNextImageInList(image) == (Image *) NULL)
                   {
                     image=DestroyImageList(image);
-                    MngInfoFreeStruct(mng_info,&have_mng_structure);
                     return((Image *) NULL);
                   }
 
@@ -6558,7 +6521,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
                     (next == (PixelPacket *) NULL))
                   {
                      image=DestroyImageList(image);
-                     MngInfoFreeStruct(mng_info,&have_mng_structure);
                      ThrowReaderException(ResourceLimitError,
                        "MemoryAllocationFailed");
                   }
@@ -7023,7 +6985,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
           if (GetNextImageInList(image) == (Image *) NULL)
             {
               image=DestroyImageList(image);
-              MngInfoFreeStruct(mng_info,&have_mng_structure);
 
               if (logging != MagickFalse)
                 (void) LogMagickEvent(CoderEvent,GetMagickModule(),
@@ -7106,7 +7067,6 @@ static Image *ReadMNGImage(const ImageInfo *image_info
       if (image != (Image *) NULL)
         image=DestroyImageList(image);
 
-      MngInfoFreeStruct(mng_info,&have_mng_structure);
       return((Image *) NULL);
     }
 
@@ -7239,10 +7199,65 @@ static Image *ReadMNGImage(const ImageInfo *image_info
       }
    }
 
-  image=GetFirstImageInList(image);
-  MngInfoFreeStruct(mng_info,&have_mng_structure);
-  have_mng_structure=MagickFalse;
+  if (logging != MagickFalse)
+    (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+      "  exit ReadOneJNGImage();");
 
+  return(image);
+}
+
+static Image *ReadMNGImage(const ImageInfo *image_info,ExceptionInfo *exception)
+{
+  Image
+    *image;
+
+  MagickBooleanType
+    logging,
+    status;
+
+  MngInfo
+    *mng_info;
+
+  /* Open image file.  */
+
+  assert(image_info != (const ImageInfo *) NULL);
+  assert(image_info->signature == MagickSignature);
+  (void) LogMagickEvent(TraceEvent,GetMagickModule(),"%s",image_info->filename);
+  assert(exception != (ExceptionInfo *) NULL);
+  assert(exception->signature == MagickSignature);
+  logging=LogMagickEvent(CoderEvent,GetMagickModule(),"Enter ReadMNGImage()");
+  image=AcquireImage(image_info);
+  mng_info=(MngInfo *) NULL;
+  status=OpenBlob(image_info,image,ReadBinaryBlobMode,exception);
+
+  if (status == MagickFalse)
+    return((Image *) NULL);
+
+  /* Allocate a MngInfo structure.  */
+
+  mng_info=(MngInfo *) AcquireMagickMemory(sizeof(MngInfo));
+
+  if (mng_info == (MngInfo *) NULL)
+    ThrowReaderException(ResourceLimitError,"MemoryAllocationFailed");
+
+  /* Initialize members of the MngInfo structure.  */
+
+  (void) ResetMagickMemory(mng_info,0,sizeof(MngInfo));
+  mng_info->image=image;
+  image=ReadOneMNGImage(mng_info,image_info,exception);
+
+  mng_info=MngInfoFreeStruct(mng_info);
+
+  if (image == (Image *) NULL)
+    {
+      if (logging != MagickFalse)
+        (void) LogMagickEvent(CoderEvent,GetMagickModule(),
+          "exit ReadMNGImage() with error");
+  
+      return((Image *) NULL);
+    }
+  (void) CloseBlob(image);
+
   if (logging != MagickFalse)
     (void) LogMagickEvent(CoderEvent,GetMagickModule(),"exit ReadMNGImage()");
 
@@ -12124,7 +12139,7 @@ static MagickBooleanType WritePNGImage(const ImageInfo
 
   (void) CloseBlob(image);
 
-  MngInfoFreeStruct(mng_info,&have_mng_structure);
+  mng_info=MngInfoFreeStruct(mng_info);
 
   if (logging != MagickFalse)
     (void) LogMagickEvent(CoderEvent,GetMagickModule(),"exit WritePNGImage()");
@@ -12788,7 +12803,7 @@ static MagickBooleanType WriteJNGImage(const ImageInfo
   (void) CloseBlob(image);
 
   (void) CatchImageException(image);
-  MngInfoFreeStruct(mng_info,&have_mng_structure);
+  mng_info=MngInfoFreeStruct(mng_info);
   if (logging != MagickFalse)
     (void) LogMagickEvent(CoderEvent,GetMagickModule(),
       "  exit WriteJNGImage()");
@@ -13630,7 +13645,7 @@ static MagickBooleanType WriteMNGImage(const ImageInfo
 
     if (status == MagickFalse)
       {
-        MngInfoFreeStruct(mng_info,&have_mng_structure);
+        mng_info=MngInfoFreeStruct(mng_info);
         (void) CloseBlob(image);
         return(MagickFalse);
       }
@@ -13663,7 +13678,7 @@ static MagickBooleanType WriteMNGImage(const ImageInfo
     Relinquish resources.
   */
   (void) CloseBlob(image);
-  MngInfoFreeStruct(mng_info,&have_mng_structure);
+  mng_info=MngInfoFreeStruct(mng_info);
 
   if (logging != MagickFalse)
     (void) LogMagickEvent(CoderEvent,GetMagickModule(),"exit WriteMNGImage()");
